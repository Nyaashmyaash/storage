# suppress inspection "HttpUrlsUsage" for whole file
spring.application.name=storage
server.port=5698
# datasource
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=************
spring.datasource.username=expresscourier
spring.datasource.password=*********
# hikari
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.isolate-internal-queries=false
spring.datasource.hikari.read-only=false
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.leak-detection-threshold=0
spring.datasource.hikari.max-lifetime=28800000
spring.datasource.hikari.maximum-pool-size=30
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.connection-test-query=SELECT 1
# flyway
storage.flyway.locations=classpath:com/cdek/storage/db/db-migration
# cloud default
spring.cloud.stream.default-binder=rabbit
spring.cloud.stream.default.group=${spring.application.name}
spring.cloud.stream.default.contentType=application/json
spring.cloud.stream.default.consumer.max-attempts=1
spring.cloud.stream.rabbit.default.consumer.exchangeType=fanout
spring.cloud.stream.rabbit.default.consumer.preftch=1000
spring.cloud.stream.rabbit.default.consumer.max-concurency=5
spring.rabbitmq.addresses=********************
# function bindings
spring.cloud.stream.function.definition=orderListener-process;contractListener-process;orderCargoPlaceListener-process;workCalendarListener-process;logisticCityListener-process;officeListener-process;postamatStatusListener-process;
# cloud bindings
spring.cloud.stream.bindings.orderListener-process-in-0.destination=obj.order
spring.cloud.stream.bindings.contractListener-process-in-0.destination=obj.contract
spring.cloud.stream.bindings.orderCargoPlaceListener-process-in-0.destination=obj.order.cargoplace
spring.cloud.stream.bindings.workCalendarListener-process-in-0.destination=obj.calendar
spring.cloud.stream.bindings.logisticCityListener-process-in-0.destination=obj.locality.city
spring.cloud.stream.bindings.officeListener-process-in-0.destination=obj.office
spring.cloud.stream.bindings.postamatStatusListener-process-in-0.destination=obj.postomat-event
# cloud rabbit
spring.cloud.stream.rabbit.bindings.orderListener-process-in-0.consumer.max-concurrency=15
spring.cloud.stream.rabbit.bindings.workCalendarListener-process-in-0.consumer.max-concurrency=10
spring.cloud.stream.rabbit.bindings.orderCargoPlaceListener-process-in-0.consumer.exchange-type=topic
spring.cloud.stream.rabbit.bindings.orderCargoPlaceListener-process-in-0.consumer.auto-bind-dlq=true
spring.cloud.stream.rabbit.bindings.orderCargoPlaceListener-process-in-0.consumer.dlq-dead-letter-exchange=
spring.cloud.stream.rabbit.bindings.postamatStatusListener-process-in-0.consumer.max-concurrency=10
# 10 seconds
spring.cloud.stream.rabbit.bindings.orderCargoPlaceListener-process-in-0.consumer.dlq-ttl=10000
spring.cloud.stream.bindings.orderCargoPlaceListener-process-in-0.consumer.max-attempts=3
# publish event
spring.cloud.stream.source=objStoragePeriod
spring.cloud.stream.bindings.objStoragePeriod-out-0.destination=obj.storage.period
spring.cloud.stream.rabbit.bindings.objStoragePeriod-out-0.producer.exchange-type=fanout
# mybatis
mybatis.type-aliases-package=com.cdek.storage.model
mybatis.configuration.cache-enabled=true
mybatis.configuration.lazy-loading-enabled=true
mybatis.configuration.aggressive-lazy-loading=false
mybatis.configuration.multiple-result-sets-enabled=true
mybatis.configuration.use-column-label=true
mybatis.configuration.use-generated-keys=false
mybatis.configuration.auto-mapping-behavior=PARTIAL
mybatis.configuration.default-executor-type=SIMPLE
mybatis.configuration.map-underscore-to-camel-case=true
mybatis.configuration.local-cache-scope=SESSION
mybatis.configuration.jdbc-type-for-null=NULL
mybatis.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl
mybatis.type-handlers-package=com.cdek.storage.infrastructure.persistence.db.typehandler
# order
order.url=**************
abac.pdp.url=**************
abac.policy.alias=${spring.application.name}
# system user
cdek.system-user.login=storage
cdek.system-user.password-hash=*******************
# check order in db
check.order.in.db.and.create.if.need=true
# messages properties
spring.messages.basename=i18n/messages
# cargoplace logistic status
cargoplace.logistic.status.url=*************************
